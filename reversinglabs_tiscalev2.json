{
    "appid": "e12f831a-9a3a-42a7-97f4-36fd6ba436e5",
    "name": "ReversingLabs TitaniumScale v2",
    "description": "App integrates with ReversingLabs TitaniumScale APIs",
    "type": "reputation",
    "product_vendor": "ReversingLabs",
    "logo": "logo_reversinglabs_tiscalev2.svg",
    "logo_dark": "logo_reversinglabs_tiscalev2_dark.svg",
    "product_name": "TitaniumScale",
    "python_version": "3",
    "product_version_regex": ".*",
    "publisher": "ReversingLabs",
    "contributors": [
        {
            "name": "RLakukolja"
        },
        {
            "name": "DinkoReversingLabs"
        },
        {
            "name": "MislavReversingLabs"
        }
    ],
    "license": "Copyright (c) ReversingLabs, 2023",
    "app_version": "1.1.0",
    "utctime_updated": "2023-04-13T12:48:58.213954Z",
    "package_name": "phantom_reversinglabs_tiscalev2",
    "main_module": "reversinglabs_tiscalev2_connector.py",
    "min_phantom_version": "6.2.1",
    "app_wizard_version": "1.0.0",
    "fips_compliant": false,
    "configuration": {
        "url": {
            "description": "TitaniumScale URL",
            "data_type": "string",
            "required": true,
            "order": 0
        },
        "token": {
            "description": "TitaniumScale token",
            "data_type": "password",
            "required": true,
            "order": 1
        },
        "wait_time": {
            "description": "Wait time (seconds)",
            "data_type": "numeric",
            "default": 2,
            "order": 2
        },
        "retries": {
            "description": "Number of retries",
            "data_type": "numeric",
            "default": 10,
            "order": 3
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "verbose": "Validate the asset configuration for connectivity using supplied configuration.",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "detonate file and get report",
            "identifier": "detonate_file_and_get_report",
            "description": "Detonate file and return report",
            "verbose": "Detonates file and returns report.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "vault_id": {
                    "description": "Vault ID of file to detonate",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [
                        "pe file",
                        "pdf",
                        "flash",
                        "apk",
                        "jar",
                        "doc",
                        "xls",
                        "ppt"
                    ],
                    "order": 0
                },
                "full_report": {
                    "description": "Return full report",
                    "data_type": "boolean",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.vault_id",
                    "data_type": "string",
                    "contains": [
                        "pe file",
                        "pdf",
                        "flash",
                        "apk",
                        "jar",
                        "doc",
                        "xls",
                        "ppt"
                    ],
                    "column_name": "Vault ID",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.full_report",
                    "data_type": "boolean",
                    "column_name": "Full Report",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 2,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "custom",
                "width": 10,
                "height": 5,
                "view": "reversinglabs_tiscalev2_views.detonate_and_get_report",
                "title": "TitaniumScale Detonate File And Get Report"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get report",
            "identifier": "get_report",
            "description": "Query for results of an already completed detonation",
            "verbose": "Queries for results of an already completed detonation.",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "task_url": {
                    "description": "Task URL to get the report of",
                    "data_type": "string",
                    "order": 0,
                    "required": true
                },
                "full_report": {
                    "description": "Get full report",
                    "data_type": "boolean",
                    "order": 1
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.task_url",
                    "data_type": "string",
                    "column_name": "Task URL",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.full_report",
                    "data_type": "boolean",
                    "column_name": "Full Report",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 2,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "custom",
                "width": 10,
                "height": 5,
                "view": "reversinglabs_tiscalev2_views.get_report",
                "title": "TitaniumScale Get Report"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get report by id",
            "identifier": "get_report_by_id",
            "description": "Query for results of an already completed detonation",
            "verbose": "Queries for results of an already completed detonation.",
            "type": "investigate",
            "read_only": true,
            "parameters": {
                "task_id": {
                    "description": "Unique ID assigned to each processing task",
                    "data_type": "numeric",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": ["task id"]
                },
                "full": {
                    "description": "Specify if the full (true), or summary (false) report should be returned",
                    "data_type": "boolean",
                    "order": 1,
                    "required": false,
                    "default": true
                },
                "v13": {
                    "description": "Specifies whether the report should be returned in TiScale 1.3 version (true), or not (false)",
                    "data_type": "boolean",
                    "order": 2,
                    "required": false,
                    "default": false
                },
                "view": {
                    "description": "Applied report transformation, see Customizing Analysis Report",
                    "data_type": "string",
                    "order": 3,
                    "required": false
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.task_id",
                    "data_type": "numeric",
                    "column_name": "Task ID",
                    "column_order": 0,
                    "contains": ["task id"]
                },
                {
                    "data_path": "action_result.parameter.full",
                    "data_type": "boolean",
                    "column_name": "Full",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.v13",
                    "data_type": "boolean",
                    "column_name": "v13",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.view",
                    "data_type": "string",
                    "column_name": "View",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 4,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "custom",
                "width": 10,
                "height": 5,
                "view": "reversinglabs_tiscalev2_views.get_report",
                "title": "TitaniumScale Get Report"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "detonate file",
            "identifier": "detonate_file",
            "description": "Detonate file",
            "verbose": "Detonates file and returns task ID (URL to get the report from).",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "vault_id": {
                    "description": "Vault ID of the file",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": ["vault id"],
                    "order": 0
                },
                "custom_token": {
                    "description": "Custom string to filter processing tasks, if there are any files that were uploaded with that custom string in the X-TiScale-Token header",
                    "data_type": "string",
                    "order": 1,
                    "required": false,
                    "primary": false
                },
                "user_data": {
                    "description": "Additional JSON encoded payload. Used in parts of the processing pipeline.",
                    "data_type": "string",
                    "order": 2,
                    "required": false
                },
                "custom_data": {
                    "description": "Any user defined JSON encoded payload. This data will be included in the analysis report.",
                    "data_type": "string",
                    "order": 3,
                    "required": false
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.vault_id",
                    "data_type": "string",
                    "column_name": "Vault ID",
                    "contains": ["vault id"],
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.custom_token",
                    "data_type": "string",
                    "column_name": "Custom token",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.user_data",
                    "data_type": "string",
                    "column_name": "User data",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.custom_data",
                    "data_type": "string",
                    "column_name": "Custom data",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 4,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "custom",
                "width": 10,
                "height": 5,
                "view": "reversinglabs_tiscalev2_views.detonate_file",
                "title": "TitaniumScale Detonate File And Get Report"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get task list",
            "identifier": "get_task_list",
            "description": "List processing tasks generated by file submission requests",
            "verbose": "When a file is submitted for analysis a processing task is created and queued on the TiScale Worker server. All processing results are retained until deleted by the user, or when the time configured using the conf_cleanup_task_age_limit expires (whichever comes first).",
            "type": "generic",
            "read_only": true,
            "parameters": {
                "age": {
                    "description": "Number of seconds to filter processing tasks based on their age. When provided the API returns only those tasks that are older than the specified number of seconds.",
                    "data_type": "numeric",
                    "order": 0,
                    "required": false,
                    "primary": false,
                    "contains": ["task age"]
                },
                "custom_token": {
                    "description": "Custom string to filter processing tasks, if there are any files that were uploaded with that custom string in the X-TiScale-Token header",
                    "data_type": "string",
                    "order": 1,
                    "required": false,
                    "primary": false
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.age",
                    "data_type": "numeric",
                    "column_name": "age",
                    "contains": ["task age"],
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.custom_token",
                    "data_type": "string",
                    "column_name": "custom_token",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 2,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "custom",
                "width": 10,
                "height": 5,
                "view": "reversinglabs_tiscalev2_views.get_task_list",
                "title": "TitaniumScale Delete Processing Tasks"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete processing task",
            "identifier": "delete_processing_task",
            "description": "Deletes a single processing task record from the system",
            "verbose": "Users can manually delete task records from the system at any time.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "task_id": {
                    "description": "ID of the task to delete",
                    "data_type": "numeric",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": ["task id"]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.task_id",
                    "data_type": "numeric",
                    "column_name": "task_id",
                    "column_order": 0,
                    "contains": ["task id"]
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "delete processing tasks",
            "identifier": "delete_processing_tasks",
            "description": "Delete task records from the system based on the time when they were submitted",
            "verbose": "All file processing results are automatically removed from the platform 30 minutes after processing is completed. However, users can manually delete task records from the system at any time. Task age is calculated as being the difference between the current system timestamp and the timestamp of the task submission.",
            "type": "generic",
            "read_only": false,
            "parameters": {
                "age": {
                    "description": "Number of seconds to delete processing tasks based on their age",
                    "data_type": "numeric",
                    "order": 0,
                    "required": true,
                    "primary": true,
                    "contains": ["task age"]
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.age",
                    "data_type": "numeric",
                    "column_name": "age",
                    "contains": ["task age"],
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        },
        {
            "action": "get yara id",
            "identifier": "get_yara_id",
            "description": "Retrieve an identifier for the current set of YARA rules on the Worker instance",
            "verbose": "If there are any changes to the set of YARA rules, the identifier will change. Therefore, this endpoint can be used to monitor changes to YARA rules by comparing the responses retrieved over multiple time intervals.",
            "type": "generic",
            "read_only": true,
            "parameters": {},
            "output": [
                {
                    "data_path": "action_result.data.*.id",
                    "data_type": "string",
                    "column_name": "id",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "column_name": "Status",
                    "column_order": 1,
                    "example_values": [
                        "success",
                        "failed"
                    ]
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ],
    "pip39_dependencies": {
        "wheel": [
            {
                "module": "certifi",
                "input_file": "wheels/py3/certifi-2024.6.2-py3-none-any.whl"
            },
            {
                "module": "charset_normalizer",
                "input_file": "wheels/py3/charset_normalizer-3.3.2-py3-none-any.whl"
            },
            {
                "module": "idna",
                "input_file": "wheels/py3/idna-3.7-py3-none-any.whl"
            },
            {
                "module": "requests",
                "input_file": "wheels/py3/requests-2.32.3-py3-none-any.whl"
            },
            {
                "module": "reversinglabs_sdk_py3",
                "input_file": "wheels/py3/reversinglabs_sdk_py3-2.5.6-py3-none-any.whl"
            },
            {
                "module": "urllib3",
                "input_file": "wheels/py3/urllib3-2.2.1-py3-none-any.whl"
            }
        ]
    }
}